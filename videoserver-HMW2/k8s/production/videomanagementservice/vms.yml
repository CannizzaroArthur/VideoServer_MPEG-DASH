apiVersion: v1
kind: Service
metadata:
  name: vs-db
spec:
  ports:
    - port: 3306
  selector:
    app: vs-db
---
apiVersion: v1
kind: Service
metadata:
  name: vms
spec:
  ports:
  - port: 8080
  selector:
    app: vms
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vs-db
spec:
  selector:
      matchLabels:
          app: vs-db
  template:
    metadata:
      labels:
        app: vs-db
    spec:
      containers:
      - name: vs-db
        image: mysql:5.7
        ports:
        - containerPort: 3306
        envFrom:
        - configMapRef:
            name: vs-db-env-file
        - secretRef:
            name: vs-db-secret-file
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
#        readinessProbe:
#          exec:
#            command: ["mysql","-uroot","-ppassword","-h", "127.0.0.1","-P","3306", "-e", "SELECT 1"]
#          initialDelaySeconds: 5
#          periodSeconds: 2
#          timeoutSeconds: 1
      - name: vsdb-client
        image: m1c0l/videoserver_mysqlclient:v2
        command: ["sh", "-c"]
        args: ["until mysqladmin -uroot -ppassword -h127.0.0.1 -P3306 status >/dev/null 2>&1 </dev/null; do echo waiting for db; sleep 2; done; ash /stats/stats.sh"]
        ports:
        - containerPort: 3307
        envFrom:
        - configMapRef:
            name: vs-db-client-env-file
        - secretRef:
            name: vs-db-client-secret-file
        volumeMounts:
            - mountPath: /stats/stats_logs
              name: vs-stats
#        livenessProbe:
#          exec:
#            command: ["mysqladmin", "ping"]
#          initialDelaySeconds: 30
#          periodSeconds: 10
#          timeoutSeconds: 5
      volumes:
      - name: vs-stats
        hostPath:
            path: /data/vsStats
            type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vms
spec:
  selector:
      matchLabels:
          app: vms
  template:
    metadata:
      labels:
        app: vms
    spec:
      containers:
      - name: vms
        image: m1c0l/videoserver_vms:v2
        command: ["./wait-for-it.sh", "vs-db:3306","--","java", "-jar", "service.jar"]
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: vs-db-env-file
        - configMapRef:
            name: vms-env-file
        - secretRef:
            name: vs-db-secret-file
        volumeMounts:
            - mountPath: /Storage
              name: vs-storage
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 40
          periodSeconds: 3
      volumes:
      - name: vs-storage
        hostPath:
            path: /data/vsStorage
            type: DirectoryOrCreate
